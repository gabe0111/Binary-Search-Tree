Recursive approach

// User function Template for C++

void guide(struct Node* node, vector<int>& res){
    if(node==NULL){
        return;
    }
    res.push_back(node->data);
    guide(node->left,res);
    guide(node->right,res);
}
vector<int> preOrder(struct Node* node) {
    // Your code here
    vector<int> res;
    guide(node,res);
    return res;
}

Iterative approach

// User function Template for C++

vector<int> preOrder(struct Node* node) {
    // Your code here
    vector<int> res;
    if(node==NULL){
        return res;
    }
    stack <Node*> st;
    st.push(node);
    
    while(!st.empty()){
        Node* curr =st.top();
        st.pop();
        res.push_back(curr->data);
        if(curr->right!=NULL){
            st.push(curr->right);
        }
        if(curr->left!=NULL){
            st.push(curr->left);
        }
    }
    return res;
}


